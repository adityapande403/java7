import java.util.Scanner;

public class Rational {
    private int numerator;
    private int denominator;

    public Rational(int numerator, int denominator) {
        if (denominator == 0) {
            throw new IllegalArgumentException("Denominator cannot be zero");
        }
        int gcd = gcd(Math.abs(numerator), Math.abs(denominator));
        this.numerator = numerator / gcd;
        this.denominator = denominator / gcd;
        if (this.denominator < 0) {
            this.numerator *= -1;
            this.denominator *= -1;
        }
    }

    public int getNumerator() {
        return numerator;
    }

    public int getDenominator() {
        return denominator;
    }

    public Rational add(Rational other) {
        int lcm = lcm(this.denominator, other.denominator);
        int num1 = this.numerator * (lcm / this.denominator);
        int num2 = other.numerator * (lcm / other.denominator);
        return new Rational(num1 + num2, lcm);
    }

    public Rational subtract(Rational other) {
        int lcm = lcm(this.denominator, other.denominator);
        int num1 = this.numerator * (lcm / this.denominator);
        int num2 = other.numerator * (lcm / other.denominator);
        return new Rational(num1 - num2, lcm);
    }

    public Rational multiply(Rational other) {
        return new Rational(this.numerator * other.numerator, this.denominator * other.denominator);
    }

    public Rational divide(Rational other) {
        if (other.numerator == 0) {
            throw new ArithmeticException("Cannot divide by zero");
        }
        return new Rational(this.numerator * other.denominator, this.denominator * other.numerator);
    }

    public int compareTo(Rational other) {
        int lcm = lcm(this.denominator, other.denominator);
        int num1 = this.numerator * (lcm / this.denominator);
        int num2 = other.numerator * (lcm / other.denominator);
        return Integer.compare(num1, num2);
    }

    public double toDouble() {
        return (double) numerator / denominator;
    }

    public Rational abs() {
        return new Rational(Math.abs(numerator), denominator);
    }

    @Override
    public String toString() {
        if (denominator == 1) {
            return Integer.toString(numerator);
        }
        return numerator + "/" + denominator;
    }

    private int gcd(int a, int b) {
        return b == 0 ? a : gcd(b, a % b);
    }

    private int lcm(int a, int b) {
        return a * b / gcd(a, b);
    }

    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        System.out.print("Enter numerator 1: ");
        int num1 = scanner.nextInt();
        System.out.print("Enter denominator 1: ");
        int den1 = scanner.nextInt();
        Rational r1 = new Rational(num1, den1);

        System.out.print("Enter numerator 2: ");
        int num2 = scanner.nextInt();
        System.out.print("Enter denominator 2: ");
        int den2 = scanner.nextInt();
        Rational r2 = new Rational(num2, den2);

        System.out.println("r1 = " + r1);
        System.out.println("r2 = " + r2);

        try {
            Rational result = r1.add(r2);
            System.out.println("r1 + r2 = " + result);
        } catch
